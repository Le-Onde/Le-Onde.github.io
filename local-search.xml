<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Redis学习笔记6 key和数据库通用指令</title>
    <link href="/2021/04/21/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B06-key%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E9%80%9A%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
    <url>/2021/04/21/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B06-key%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E9%80%9A%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h2 id="一、key通用操作"><a href="#一、key通用操作" class="headerlink" title="一、key通用操作"></a>一、key通用操作</h2><h3 id="1-key特征"><a href="#1-key特征" class="headerlink" title="1.key特征"></a>1.key特征</h3><ul><li>key是一个字符串，通过key获取redis中保存的数据</li></ul><h3 id="2-key设计的操作"><a href="#2-key设计的操作" class="headerlink" title="2.key设计的操作"></a>2.key设计的操作</h3><ul><li>对于key自身状态的相关操作，例如：删除，判定存在，获取类型等</li><li>对于key有效性控制相关操作，例如：有效期设定，判定是否有效，有效状态的切换等</li><li>对于key快速查询操作，例如：按指定策略查询key</li></ul><h3 id="3-key基本操作"><a href="#3-key基本操作" class="headerlink" title="3.key基本操作"></a>3.key基本操作</h3><ul><li><p>删除指定key</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">del key<br></code></pre></td></tr></table></figure></li><li><p>获取key是否存在</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">exists key<br></code></pre></td></tr></table></figure></li><li><p>获取key的类型</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">type key<br></code></pre></td></tr></table></figure><p><strong>key扩展操作（时效性控制）</strong></p></li><li><p>为指定key设置有效期</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">expire key seconds     #设置秒<br>pexpire key milliseconds #设置毫秒<br>expireat key timestamp   #秒时间戳<br>pexpireat key milliseconds-timestamp  #毫秒时间戳<br></code></pre></td></tr></table></figure></li><li><p>获取key的有效时间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">ttl key<br>pttl key<br></code></pre></td></tr></table></figure><ul><li>ttl命令下，如果返回值为-2则是key不存在；如果返回值是-1，则是key存在且没有设置有效期；如果key设置有效期，则返回当前剩余的有效时常。</li></ul></li><li><p>切换key从时效性到永久性</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">persist key  <br></code></pre></td></tr></table></figure><p><strong>key扩展操作（查询模式）</strong></p></li><li><p>查询key</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">keys pattern<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210421210222191.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p></li></ul><h3 id="4-key其他操作"><a href="#4-key其他操作" class="headerlink" title="4.key其他操作"></a>4.key其他操作</h3><ul><li><p>为key改名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">rename key newkey<br>renamenx key newkey  #如果key不存在，就改名<br></code></pre></td></tr></table></figure></li><li><p>对所有key排序</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sort<br></code></pre></td></tr></table></figure></li><li><p>其他key通用操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">help @generic<br></code></pre></td></tr></table></figure></li></ul><h2 id="二、数据库通用操作"><a href="#二、数据库通用操作" class="headerlink" title="二、数据库通用操作"></a>二、数据库通用操作</h2><p><strong>key的重复问题</strong></p><ul><li>key是由程序员定义的</li><li>redis在使用过程中，伴随着操作数据量的增加，会出现大量的数据以及对应的key</li><li>数据不区分种类，类别混杂在一起，极易出现重复或冲突</li></ul><p><strong>解决方案</strong></p><ul><li>redis为每个服务器提供有16个数据库，编号从0-15</li><li>每个数据库之间的数据互相独立</li></ul><p><img src="https://img-blog.csdnimg.cn/20210421210716812.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><h3 id="1-db基本操作"><a href="#1-db基本操作" class="headerlink" title="1.db基本操作"></a>1.db基本操作</h3><ul><li><p>切换数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select index<br></code></pre></td></tr></table></figure></li><li><p>其他操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">quit<br>ping<br>echo message<br></code></pre></td></tr></table></figure></li></ul><h3 id="2-db相关操作"><a href="#2-db相关操作" class="headerlink" title="2.db相关操作"></a>2.db相关操作</h3><ul><li><p>数据移动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">move key db<br></code></pre></td></tr></table></figure></li><li><p>数据清除</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">dbsize   #查看当前库中key的总数量<br>flushdb  #清除当前库中所有的key<br>flushall #清除所有库中的key<br></code></pre></td></tr></table></figure><p>​</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>Redis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Redis学习笔记5 sorted_set数据类型</title>
    <link href="/2021/04/21/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B05-sorted-set%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <url>/2021/04/21/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B05-sorted-set%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="sorted-set类型"><a href="#sorted-set类型" class="headerlink" title="sorted_set类型"></a>sorted_set类型</h2><ul><li>新的存储需求：数据排序有利于数据的有效显示，需要提供一种可以根据自身特征进行排序的方式</li><li>需要的存储结构：新的存储模型，可以保存可排序的数据</li><li>sorted_set类型：在set的存储结构基础上添加可排序字段</li></ul><p><img src="https://img-blog.csdnimg.cn/20210421164359468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><h2 id="sorted-set类型数据的基本操作"><a href="#sorted-set类型数据的基本操作" class="headerlink" title="sorted_set类型数据的基本操作"></a>sorted_set类型数据的基本操作</h2><ul><li><p>添加数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">zadd key score1 member1 [score2 member2]<br><br></code></pre></td></tr></table></figure></li><li><p>获取全部数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">zrange key start stop [WITHSCORES]<br></code></pre></td></tr></table></figure></li><li><p>删除数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">zrem key member [member1 ...]<br></code></pre></td></tr></table></figure></li><li><p>按条件获取数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">zrangebyscore key min max [WITHSCORES] [LIMIT]<br>zrevrangebyscore key max min [WITHSCORES] #逆排序<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210421165618285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><p>​</p></li></ul><ul><li><p>按条件获取数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">zremrangebyrank key start stop   #按索引删除<br>zremrangebyscore key min max<br></code></pre></td></tr></table></figure></li></ul><p><em>注意</em>：</p><ul><li><em>min与max用于限定搜索查询的条件</em></li><li><em>start与stop用于限定查询范围，作用于索引，表示开始和结束索引</em></li><li><em>offset与count用于限定查询范围，作用于查询结果，表示开始位置和数据总量</em></li></ul><p>​    </p><ul><li><p>获取集合数据总量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">zcard key<br>zcount key min max<br><br></code></pre></td></tr></table></figure></li><li><p>集合交、并操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">zinterstore destination numkeys key [key ...]<br>zunionstore destination numkeys key [key ...]<br></code></pre></td></tr></table></figure></li></ul><h2 id="sorted-set类型数据的扩展操作"><a href="#sorted-set类型数据的扩展操作" class="headerlink" title="sorted_set类型数据的扩展操作"></a>sorted_set类型数据的扩展操作</h2><p><strong>业务场景</strong></p><p><img src="https://img-blog.csdnimg.cn/20210421171218699.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><p><strong>解决方案</strong></p><ul><li><p>获取数据对应的索引（排名）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">zrank key member<br>zrevrank key member<br></code></pre></td></tr></table></figure></li><li><p>score 值获取与修改</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">zscore key member<br>zincrby key increment member<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210421171509850.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p></li><li><p>redis应用于计数器组合排序功能对应的排名</p></li></ul><h2 id="sorted-set类型数据操作的注意事项"><a href="#sorted-set类型数据操作的注意事项" class="headerlink" title="sorted_set类型数据操作的注意事项"></a>sorted_set类型数据操作的注意事项</h2><ul><li>score保存的数据存储空间是64位，如果是整数范围是-9007199254740992~9007199254740992</li><li>score保存的数据也可以是一个双精度的double值，基于双精度浮点数的特征，可能会丢失精度，使用时侯要慎重</li><li>sorted_set底层存储还是基于set结构的，因此数据不能重复，如果重复添加相同的数据，score值将被反复覆盖，保留最后一次修改的结果</li></ul><p><strong>业务场景</strong></p><p><img src="https://img-blog.csdnimg.cn/20210421171846808.png" alt="img"></p><p> <strong>解决方案</strong></p><ul><li><p>对于基于时间线限定的任务处理，将处理时间记录位score值，利用排序功能区分处理的先后顺序</p></li><li><p>记录下一个要处理的事件，当到期后处理对应的任务，移除redis中的记录，并记录下一个要处理的时间</p></li><li><p>当新任务加入时，判定并更新当前下一个要处理的任务时间</p></li><li><p>为提升sorted_set的性能，通常将任务根据特征存储成若干个sorted_set.例如1小时内，1天内，年度等，操作时逐渐提升，将即将操作的若干个任务纳入到1小时内处理队列中</p></li><li><p>获取当前系统时间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">time<br></code></pre></td></tr></table></figure><ul><li>redis应用于定时任务顺序管理或任务过期管理</li></ul></li></ul><p><strong>业务场景（任务/消息权重设定应用）</strong></p><p><img src="https://img-blog.csdnimg.cn/20210421172226972.png" alt="img"></p><p><strong>解决方案</strong></p><p><img src="https://img-blog.csdnimg.cn/2021042117234594.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><ul><li><p>带有权重的任务，优先处理权重高的任务，采用score记录权重即可</p><p><img src="https://img-blog.csdnimg.cn/20210421172537332.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><p>​</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>Redis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Redis学习笔记4 Set数据类型</title>
    <link href="/2021/04/21/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B04-Set%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <url>/2021/04/21/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B04-Set%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="set类型"><a href="#set类型" class="headerlink" title="set类型"></a>set类型</h2><ul><li><p>新的存储需求：存储大量的数据，在查询方面提供更高的效率</p></li><li><p>需要的存储结构：能够保存大量数据，高效的内部存储机制，便于查询</p></li><li><p>set类型：与hash存储结构完全相同，仅存储键，不存储值（nil），并且值是不允许重复的。</p><p><img src="https://img-blog.csdnimg.cn/20210421154631120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><p><img src="https://img-blog.csdnimg.cn/2021042115482653.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p></li></ul><h2 id="set类型数据的基本操作"><a href="#set类型数据的基本操作" class="headerlink" title="set类型数据的基本操作"></a>set类型数据的基本操作</h2><ul><li><p>添加书籍</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sadd key member1 [member2]<br></code></pre></td></tr></table></figure></li><li><p>获取全部数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">smembers key<br></code></pre></td></tr></table></figure></li><li><p>删除数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">srem key member1 [member2]<br></code></pre></td></tr></table></figure></li><li><p>获取集合数据总量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">scard key<br></code></pre></td></tr></table></figure></li><li><p> 判断集合中是否包含指定数据</p></li></ul>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sismember key member<br></code></pre></td></tr></table></figure><h2 id="set类型数据的扩展操作1"><a href="#set类型数据的扩展操作1" class="headerlink" title="set类型数据的扩展操作1"></a>set类型数据的扩展操作1</h2><p><strong>业务操作</strong></p><p>每位用户首次使用进入头条时候会设置3项爱好的内容，但是后期为了增加用户的活跃度，兴趣点，必须让用户对其他信息类别逐渐产生兴趣，增加客户留存度，如何实现？</p><p><strong>业务分析</strong></p><ul><li>系统分析出各个分类的最新或最热点信息条目并组织成set集合</li><li>随机挑选其中部分信息</li><li>配合用户关注信息分类中的热点信息组织展示的全信息集合</li></ul><p><strong>解决方案</strong></p><ul><li><p>随机获取集合中指定数量的数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">srandmember key [count]<br></code></pre></td></tr></table></figure></li><li><p>随机获取集合中的某个数据并将该数据移除集合</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">spop key<br></code></pre></td></tr></table></figure></li><li><p>redis应用于随机推荐类信息检索，例如热点歌单推荐，热点新闻推荐，热点旅游线路，应用APP推荐，大V推荐等</p></li></ul><h2 id="set类型数据的扩展操作2"><a href="#set类型数据的扩展操作2" class="headerlink" title="set类型数据的扩展操作2"></a>set类型数据的扩展操作2</h2><ul><li><p>求两个集合的交、并、差集</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sinter key [key2]<br></code></pre></td></tr></table></figure></li><li><p>求两个集合的交、并、差集并存储到指定集合中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">sinterstore destination key1 [key2]<br>sunionstore destination key1 [key2]<br>sdiffstore destination key1 [key2]<br><br></code></pre></td></tr></table></figure></li><li><p>将指定数据从原始集合中移动到目标集合中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">smove source destination member<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210421162116514.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p></li><li><p>redis应用于同类信息的关联搜索，二度关联搜索，深度关联搜索</p></li><li><p>显示共同关注（一度）</p></li><li><p>显示共同好友（一度）</p></li><li><p>由用户A出发，获取到好友用户B的好友信息列表（一度）</p></li><li><p>由用户A出发，获取到好友用户B的购物清单列表（二度）</p></li><li><p>由用户A出发，获取到好友用户B的游戏充值列表（二度）</p></li></ul><h2 id="set类型数据操作的注意事项"><a href="#set类型数据操作的注意事项" class="headerlink" title="set类型数据操作的注意事项"></a>set类型数据操作的注意事项</h2><ul><li>set类型不允许数据重复，如果添加的数据在set中已经存在，将只保留一份</li><li>set虽然与hash的存储结构相同，但是无法启动hash中存储值的空间</li></ul><p><strong>业务场景</strong></p><p><img src="https://img-blog.csdnimg.cn/20210421162650651.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><p><strong>解决方案</strong></p><ul><li>依赖set集合数据不重复的特征，依赖set集合hash存储结构特征完成数据过滤与快速查询</li><li>根据用户id获取用户所有角色</li><li>根据用户所有角色获取用户所有操作权限放入set集合</li><li>根据用户所有觉得获取用户所有数据全选放入set集合</li></ul><p><strong>校验工作</strong>：</p><p>​    redis提供基础数据还是提供校验结果</p><ul><li>redis应用于同类型不重复数据的合并操作</li></ul><h2 id="set类型应用场景"><a href="#set类型应用场景" class="headerlink" title="set类型应用场景"></a>set类型应用场景</h2><p><strong>业务场景</strong></p><p><img src="https://img-blog.csdnimg.cn/20210421163055810.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><p><strong>解决方案</strong></p><ul><li>利用set集合的数据去重特征，记录各种访问数据</li><li>建立string类型数据，利用incr统计日访问量（PV)</li><li>建立set模型，记录不同cookie数量（UV)</li><li>建立set模型，记录不用IP数量（IP)</li></ul><p><strong>业务场景（黑白名单）</strong></p><p><img src="https://img-blog.csdnimg.cn/20210421163311178.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><p><strong>解决方案</strong></p><ul><li><p>基于经营战略设定问题用户发现、鉴别规则</p></li><li><p>周期性更行满足规则的用户黑名单，加入set集合</p></li><li><p>用户行为信息达到后与黑名单进行比比对，确认行为去向</p></li><li><p>黑名单过滤IP地址：应用于开放游客访问权限的信息源</p></li><li><p>黑名单过滤设备信息：应用于限定访问设备的信息源</p></li><li><p>黑名单过滤用户：应用于基于访问权限的信息源</p></li><li><p>redis应用于基于黑名单与白名单设定的服务控制</p><p>​</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>Redis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Redis学习笔记3 List数据类型</title>
    <link href="/2021/04/21/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03-List%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <url>/2021/04/21/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03-List%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="list类型"><a href="#list类型" class="headerlink" title="list类型"></a>list类型</h2><ul><li><p>数据存储需求：存储多个数据，并对数据进入存储空间的顺序进行区分</p></li><li><p>需要的存储结构：一个存储空间保存多个数据，且通过数据可以体现进入顺序</p></li><li><p>list类型：保存多个数据，底层使用双向链表存储结构实现</p><p><img src="https://img-blog.csdnimg.cn/20210421145318123.png" alt="img"></p></li></ul><h2 id="list类型数据基本操作"><a href="#list类型数据基本操作" class="headerlink" title="list类型数据基本操作"></a>list类型数据基本操作</h2><ul><li><p>添加/修改数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">lpush key value [value2]...   #在key对应的list头部添加元素<br>rpush key value [value2]...   #在key对应的list尾部添加元素<br></code></pre></td></tr></table></figure></li><li><p>获取数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">lrange key start stop    <br>lindex key index<br>llen key<br><br></code></pre></td></tr></table></figure></li><li><p>获取并移除数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">lpop key                      #在key对应的list头部删除元素<br>rpop key                      #在key对应的list尾部删除元素<br></code></pre></td></tr></table></figure></li><li><p>规定时间内获取并移除数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">blpop key1 [key2] timeout<br>brpop key1 [key2] timeout<br></code></pre></td></tr></table></figure><p>阻塞式获取，获取值如果还没有的时候等待，如果有值就获取。</p></li></ul><h2 id="list类型数据扩展操作"><a href="#list类型数据扩展操作" class="headerlink" title="list类型数据扩展操作"></a>list类型数据扩展操作</h2><p><strong>业务场景</strong></p><p>微信朋友圈点赞，要求按照点赞顺序显示点赞好友信息，如果取消点赞，移除对应好友信息</p><p><img src="https://img-blog.csdnimg.cn/20210421151850933.png" alt="img"></p><p><strong>解决方案</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">lrem key count value<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210421152228925.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><ul><li>redis 应用于具有操作先后顺序的数据控制</li></ul><h2 id="list类型数据操作注意事项"><a href="#list类型数据操作注意事项" class="headerlink" title="list类型数据操作注意事项"></a>list类型数据操作注意事项</h2><ul><li>list保存的数据都是string类型，数据总容量有限，最多2[^32]-1个元素。</li><li>list具有索引概念，但是操作数据时通常以队列的形式进行入队出队操作，或以栈的形式入栈出栈操作</li><li>获取全部数据操作结束索引设置为-1</li><li>list可以对数据进行分页操作，通常第一页的信息来自于list，第二页及更多的信息通过数据库的形式加载</li></ul><h2 id="list类型应用场景"><a href="#list类型应用场景" class="headerlink" title="list类型应用场景"></a>list类型应用场景</h2><p><strong>业务场景</strong></p><ol><li>twitter、新浪微博、腾讯微博中个人用于的关注列表需要按照用户的关注顺序进行展示，粉丝列表需要将最近关注的粉丝列在前面</li><li>新闻、资讯类网站如何将最新的新闻或资讯按照发生的事件顺序展示</li><li>企业运营过程中，系统将产生出大量的运营数据，如何保障堕胎服务器操作日志的统一顺序输出？</li></ol><p><strong>解决方案</strong></p><ul><li>依赖list的数据具有顺序的特征对信息进行管理</li><li>使用队列模型解决多路信息汇总合并的问题</li><li>使用栈模型解决最新消息的问题</li></ul>]]></content>
    
    
    <categories>
      
      <category>Redis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Redis学习笔记2 Hash数据类型</title>
    <link href="/2021/04/21/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02-Hash%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <url>/2021/04/21/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02-Hash%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="一、hash类型"><a href="#一、hash类型" class="headerlink" title="一、hash类型"></a>一、hash类型</h2><ul><li><p>新的存储需求：对一系列存储的数据进行编组，方便管理，典型应用存储对象信息。</p></li><li><p>需要的存储结构：一个存储空间保存多个键值对数据</p></li><li><p>hash类型：底层使用哈希表结构实现数据存储。</p><p><img src="https://img-blog.csdnimg.cn/20210413221436565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p></li></ul><p><strong>hash存储结构优化</strong></p><ul><li>如果field数量较少，存储结构优化为类数组结构</li><li>如果field数量较多，存储结构使用HashMap结构</li></ul><h2 id="二、hash类型数据的基本操作"><a href="#二、hash类型数据的基本操作" class="headerlink" title="二、hash类型数据的基本操作"></a>二、hash类型数据的基本操作</h2><ul><li>添加/修改数据<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hset key field value<br></code></pre></td></tr></table></figure></li><li>获取数据<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">hget key field<br>hgetall key<br></code></pre></td></tr></table></figure></li><li>删除数据<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hdel key field1 [field2]<br></code></pre></td></tr></table></figure></li><li>获取哈希表中是否存在指定的字段<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexists key field<br></code></pre></td></tr></table></figure></li></ul><h2 id="三、hash类型数据拓展操作"><a href="#三、hash类型数据拓展操作" class="headerlink" title="三、hash类型数据拓展操作"></a>三、hash类型数据拓展操作</h2><ul><li>获取哈希表中所有的字段名或字段值<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hkeys key<br></code></pre></td></tr></table></figure></li><li>设定指定字段的数值数据增加指定范围的值<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">hincrby key field increment<br>hincrbyfloat key field increment<br></code></pre></td></tr></table></figure></li></ul><h2 id="四、hash类型数据操作的注意事项"><a href="#四、hash类型数据操作的注意事项" class="headerlink" title="四、hash类型数据操作的注意事项"></a>四、hash类型数据操作的注意事项</h2><ul><li>hash类型下的value只能存储字符串，不允许存储其他数据类型，不存在嵌套现象。如果数据未获取到，对应的值为（nil）</li><li>每个hash可以存储2的32次方-1个键值对</li><li>hash类型十分贴近对象的数据存储形式，并且可以灵活添加删除对象属性。但hash设计初衷不是为了存储大量对象而设计的，不可滥用，不能将hash作为对象列表使用</li><li>hgetall操作可以获取全部属性，如果内部field过多，遍历整体数据效率就会很低，有可能成为数据访问瓶颈。</li></ul><h2 id="五、hash类型的应用场景"><a href="#五、hash类型的应用场景" class="headerlink" title="五、hash类型的应用场景"></a>五、hash类型的应用场景</h2><p><strong>业务场景1</strong></p><p>电商网站购物车的实现</p><p><img src="https://img-blog.csdnimg.cn/20210414104649492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><p><strong>业务分析</strong></p><ul><li>仅分析购物车的redis存储模型（添加、浏览、更改数量、删除、清空</li><li>购物车与数据库间持久化同步</li><li>购物车与订单间关系（提交购物车：读取数据生成订单 商家临时价格调整：隶属于订单级别）</li><li>未登录用户购物车信息存储（cookie存储）</li></ul><p><strong>解决方案</strong></p><p><img src="https://img-blog.csdnimg.cn/20210414110019950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><p><img src="https://img-blog.csdnimg.cn/20210414110917809.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><p><strong>当前设计是否加速了购物车的呈现</strong><br>当前仅仅是将数据存储到reids中，并没有起到加速的作用，商品还需要二次查询数据库</p><ul><li>每条购物车中的商品记录保存成两条field</li><li>field1专用于保存购买数量<br> 命名格式：商品id：nums<pre><code> 保存数据：数值</code></pre></li><li>field2专用于保存购物车中的显示信息，包含文字描述，图片地址，所属商家信息等<br>命名格式：商品id：info<br>保存数据：json</li></ul><p><strong>我们可以把field2作为独立hash，来减少数据的重复</strong><br><font color=#999AAA>创建数据，如果已存在数据则创建失败，如果没有则创建成功</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hsetnx key field value<br></code></pre></td></tr></table></figure><p><strong>业务场景2</strong></p><p>抢购活动</p><p><img src="https://img-blog.csdnimg.cn/20210414111343238.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><p><strong>解决方案</strong></p><p><img src="https://img-blog.csdnimg.cn/20210414111420146.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><p><font color=#999AAA>创建id为00001的商铺，货物1 25个，货物2 100个。</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hmset shopping:id:00001 good1 25 good2 100<br></code></pre></td></tr></table></figure><p><font color=#999AAA>店铺货物1被抢走了10个</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hincrby shopping:id:00001 good1 -10<br></code></pre></td></tr></table></figure><hr><p>学习链接:<a href="https://www.bilibili.com/video/BV1CJ411m7Gc">https://www.bilibili.com/video/BV1CJ411m7Gc</a></p>]]></content>
    
    
    <categories>
      
      <category>Redis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Redis学习笔记 String数据类型</title>
    <link href="/2021/04/20/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-String%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <url>/2021/04/20/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-String%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="redis-数据类型"><a href="#redis-数据类型" class="headerlink" title="redis 数据类型"></a>redis 数据类型</h1><ol><li>String</li><li>Hash</li><li>list</li><li>set</li><li>sorted_set</li></ol><h1 id="String数据类型"><a href="#String数据类型" class="headerlink" title="String数据类型"></a>String数据类型</h1><h2 id="1-redis-数据存储格式"><a href="#1-redis-数据存储格式" class="headerlink" title="1.redis 数据存储格式"></a>1.redis 数据存储格式</h2><ul><li><p> redis自身是一个Map，其中所有的数据类型都是采用key：value的形式存储。</p></li><li><p>数据类型指的是存储的数据的类型，也就是value部分的类型，key部分永远都是字符串。</p><table><thead><tr><th>key</th><th>value</th></tr></thead><tbody><tr><td>name</td><td>Ruby</td></tr><tr><td>age</td><td>17</td></tr></tbody></table></li></ul><h2 id="2-string类型"><a href="#2-string类型" class="headerlink" title="2.string类型"></a>2.string类型</h2><ul><li>存储的数据：单个数据，最简单的数据存储类型，也是最常用的数据存储类型</li><li>-存储数据的格式：一个存储空间保存一个数据</li><li>存储内容：通常使用字符串，如果字符串以整数形式展示，可作为数字操作使用。</li></ul><h2 id="3-string类型数据的基本操作"><a href="#3-string类型数据的基本操作" class="headerlink" title="3.string类型数据的基本操作"></a>3.string类型数据的基本操作</h2><ul><li><p>添加/修改数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">set key value<br></code></pre></td></tr></table></figure></li><li><p>获取数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">get key<br></code></pre></td></tr></table></figure></li><li><p>删除数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">del key<br></code></pre></td></tr></table></figure></li><li><p>添加/修改多个数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mset key1 value1 key2 value2 ...<br></code></pre></td></tr></table></figure></li><li><p>获取多个数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mget key<br></code></pre></td></tr></table></figure></li><li><p>获取数据字符串个数（字符串长度）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">strlen key<br></code></pre></td></tr></table></figure></li><li><p>追加信息到原始信息后部（如果原始信息存在就追加，否则新建）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">append key value<br></code></pre></td></tr></table></figure></li></ul><h2 id="4-string类型数据的拓展操作"><a href="#4-string类型数据的拓展操作" class="headerlink" title="4.string类型数据的拓展操作"></a>4.string类型数据的拓展操作</h2><ul><li><p>设置数据具有指定的生命周期</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">set key seconds value<br>psetex key milliseconds value<br></code></pre></td></tr></table></figure><p><em>设置user时效为5s，超出5秒则无法获取。</em></p><p><img src="https://img-blog.csdnimg.cn/20210413204021597.png" alt="img"></p></li><li><p>redis控制数据的生命周期，通过数据是否失效控制业务，适用于所有具有时效性限定控制的操作</p></li></ul><h2 id="5-string类型数据操作的注意事项"><a href="#5-string类型数据操作的注意事项" class="headerlink" title="5.string类型数据操作的注意事项"></a>5.string类型数据操作的注意事项</h2><ol><li>表示运行结果是否成功<br>（integer）0 → false 失败<br>（integer）1 → true 成功</li><li>表示运行结果值<br>（integer） 3 → 3 3个<br>（integer） 1 →1 1个</li><li>数据未获取<br>（nil）== null</li><li>数据最大存储量<br>512MB</li><li>数据计算最大范围（java中的long的最大值）<br>9223372036854775807</li></ol><h2 id="6-业务场景"><a href="#6-业务场景" class="headerlink" title="6.业务场景"></a>6.业务场景</h2><ul><li>主页高频访问信息显示控制，列如新浪微博大V主页显示粉丝数于微博数量</li></ul><p><strong>解决方案</strong> </p><ul><li>在redis中为大v用户设定用户信息，以用户主键和属性值为key，后台设定定时刷新策略。</li></ul><p><img src="https://img-blog.csdnimg.cn/20210413210057424.png" alt="img"></p><ul><li><p>在redis中以json格式存储大v用户，定时刷新</p><p><img src="https://img-blog.csdnimg.cn/20210413210832666.png" alt="img"></p></li></ul><h2 id="7-key的设置约定"><a href="#7-key的设置约定" class="headerlink" title="7.key的设置约定"></a>7.key的设置约定</h2><ul><li><p>热点数据key命名管理</p><p><img src="https://img-blog.csdnimg.cn/20210413211455137.png" alt="img"></p></li></ul><hr>]]></content>
    
    
    <categories>
      
      <category>Redis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一些好用的网站推荐</title>
    <link href="/2021/04/19/%E4%B8%80%E4%BA%9B%E5%A5%BD%E7%94%A8%E7%9A%84%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/"/>
    <url>/2021/04/19/%E4%B8%80%E4%BA%9B%E5%A5%BD%E7%94%A8%E7%9A%84%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/</url>
    
    <content type="html"><![CDATA[<p>一些我平常使用的网站，个人觉得还都挺不错的，就写在上面推荐一下。</p><h2 id="设计类"><a href="#设计类" class="headerlink" title="设计类"></a>设计类</h2><h3 id="1-Canva"><a href="#1-Canva" class="headerlink" title="1.Canva"></a>1.Canva</h3><p>网址：<a href="https://www.canva.cn/">https://www.canva.cn</a></p><p>这是一个在线设计的网站。各种实用模板，包括海报，PPT、微信公众号封面，LOGI等。还有一些不同的图片素材。</p><p><img src="https://img-blog.csdnimg.cn/20210420210755800.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><h3 id="2-Pexels"><a href="#2-Pexels" class="headerlink" title="2.Pexels"></a>2.Pexels</h3><p>网址：<a href="https://www.pexels.com/zh-cn/">https://www.pexels.com/zh-cn/</a></p><p>具有很丰富的高质量图片网站，不光可以免费下载高清图片，而且还可以下载视频，没有版权。</p><p><img src="https://img-blog.csdnimg.cn/20210420211431755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><h2 id="3-Pixabay"><a href="#3-Pixabay" class="headerlink" title="3.Pixabay"></a>3.Pixabay</h2><p>网址：<a href="https://pixabay.com/">https://pixabay.com/</a></p><p>拥有很多创意向，高清的图片，可以免费下载。</p><p><img src="https://img-blog.csdnimg.cn/20210420212000239.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><h2 id="4-wallhaven"><a href="#4-wallhaven" class="headerlink" title="4.wallhaven"></a>4.wallhaven</h2><p>网址：<a href="https://wallhaven.cc/">https://wallhaven.cc/</a></p><p>有很多不同种类的图片，分辨率非常高，适合用来当作壁纸或各种背景图。</p><p><img src="https://img-blog.csdnimg.cn/20210420212653446.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><h2 id="5-Iconfont"><a href="#5-Iconfont" class="headerlink" title="5.Iconfont"></a>5.Iconfont</h2><p>网址：<a href="https://www.iconfont.cn/">https://www.iconfont.cn/</a></p><p>这是国内第一个最大功能最全的矢量图标库，由阿里巴巴团队稻造的，拥有大量不同的图标，基本上都可以找到自己想要的。</p><p><img src="https://img-blog.csdnimg.cn/20210420213110352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><h3 id="6-中国色"><a href="#6-中国色" class="headerlink" title="6.中国色"></a>6.中国色</h3><p>网址：<a href="http://zhongguose.com/">http://zhongguose.com/</a></p><p>带有国风色彩的颜色搭配网站。点击RGB搭配的右侧就可以复制、导入颜色了。</p><p><img src="https://img-blog.csdnimg.cn/20210420222253614.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><h3 id="7-ColorHexa"><a href="#7-ColorHexa" class="headerlink" title="7.ColorHexa"></a>7.ColorHexa</h3><p>网址：<a href="https://www.colorhexa.com/">https://www.colorhexa.com/</a></p><p>这是一个方便，颜色种类众多的色彩搭配网站，只需输入想要搭配的颜色，就可以给出不同种的颜色搭配方案。</p><p><img src="https://img-blog.csdnimg.cn/20210420222635239.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><h2 id="学术导航类"><a href="#学术导航类" class="headerlink" title="学术导航类"></a>学术导航类</h2><h3 id="1-科塔学术导航"><a href="#1-科塔学术导航" class="headerlink" title="1.科塔学术导航"></a>1.科塔学术导航</h3><p>网址：<a href="https://site.sciping.com/">https://site.sciping.com/</a></p><p>一个质量不错的学术导航网站，站内分类包括文献数据，期刊出版，学术工具，科研软件，科研数据，学术搜索等。</p><p>它还提供科研社交，科学传播，科研机构版块，每一个版块也会进行具体网站分类；最后，网站的常用推荐功能也可以让你发现很多高质量的学术网站。</p><p><img src="https://img-blog.csdnimg.cn/20210420214033485.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="2-虫部落"><a href="#2-虫部落" class="headerlink" title="2.虫部落"></a>2.虫部落</h3><p>网址：<a href="https://www.chongbuluo.com/">https://www.chongbuluo.com/</a></p><p>功能齐全、很实用的学术搜索网站。</p><p><img src="https://img-blog.csdnimg.cn/20210420214747828.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><h2 id="课程学习类"><a href="#课程学习类" class="headerlink" title="课程学习类"></a>课程学习类</h2><h3 id="1-MOOC"><a href="#1-MOOC" class="headerlink" title="1.MOOC"></a>1.MOOC</h3><p>网址：<a href="https://www.icourse163.org/">https://www.icourse163.org/</a></p><p>国内联合750所高校共同开发的教学网站。收录了非常多名师教学课程。课程种类也非常齐全。</p><p><img src="https://img-blog.csdnimg.cn/20210420215331708.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><h3 id="2-Visuwords"><a href="#2-Visuwords" class="headerlink" title="2.Visuwords"></a>2.Visuwords</h3><p>网址：<a href="https://visuwords.com/">https://visuwords.com/</a></p><p>这是一个比较有趣的交互式单词学习网站，当你输入一个单词回车后，会给出这个单词的近义词、反义词、从属关系词、因果关系词、属性、实例、分词、动词等等。</p><p>它通过不同的颜色和线条，不同颜色的球体构成一个单词树状图，来代表不同单词之间的关系和类型。</p><p><img src="https://img-blog.csdnimg.cn/20210420220418339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="1-白描"><a href="#1-白描" class="headerlink" title="1.白描"></a>1.白描</h3><p>网址：<a href="https://web.baimiaoapp.com/">https://web.baimiaoapp.com/</a></p><p>这是一个在线扫描工具，有图片文字提取，电子表格识别，PDF转文字，都是免费使用。</p><p><img src="https://img-blog.csdnimg.cn/20210420221121669.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><h3 id="2-Docsmall"><a href="#2-Docsmall" class="headerlink" title="2.Docsmall"></a>2.Docsmall</h3><p>网址：<a href="https://docsmall.com/">https://docsmall.com/</a></p><p>一个免费在线文件压缩网站，只要上传文件之后，进行处理，在下载就ok了，目前支持图片压缩、GIF压缩、PDF压缩、PDF合并、PDF分割功能。</p><p><img src="https://img-blog.csdnimg.cn/20210420221534842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><h3 id="3-地图生成器"><a href="#3-地图生成器" class="headerlink" title="3.地图生成器"></a>3.地图生成器</h3><p>网址： <a href="http://datav.aliyun.com/tools/atlas/#&lat=30.332329214580188&lng=106.72278672066881&zoom=3.5">点击这里</a></p><p>可以下载国内省份，城市以及县城的svg格式的地图素材，并可以导入到PPT中，可编辑。</p><p><img src="https://img-blog.csdnimg.cn/20210420222012372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzYxMzEwNQ==,size_16,color_FFFFFF,t_70" alt="img"></p><hr><p>后续遇到比较不错的网址还会继续更新下去…</p>]]></content>
    
    
    <categories>
      
      <category>好用的网站</category>
      
    </categories>
    
    
    <tags>
      
      <tag>实用网站</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
